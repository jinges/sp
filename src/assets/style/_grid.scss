.grid {
  display: flex;
  flex-flow: row wrap;
  margin: 0 auto 0 auto;
  align-items: stretch;
}

.cell {
  box-sizing: border-box;
}


.cell--top {
  align-self: flex-start;
}

.cell--middle {
  align-self: center;
}

.cell--bottom {
  align-self: flex-end;
}

.cell--stretch {
  align-self: stretch;
}

// Define order override classes.
@for $i from 1 through $grid-max-columns {
  .cell--order-#{$i} {
    order: $i;
  }
}


// Mixins for width calculation.
@mixin partial-size($size, $columns, $gutter) {
  width: calc(#{(($size / $columns) * 100)+"%"} - #{$gutter});

  .grid--no-spacing > & {
    width: #{(($size / $columns) * 100)+"%"};
  }
}

@mixin full-size($gutter) {
  @include partial-size(1, 1, $gutter);
}

@mixin offset-size($size, $columns, $gutter) {
  margin-left: calc(#{(($size / $columns) * 100)+"%"} + #{$gutter / 2});

  .grid.grid--no-spacing > & {
    margin-left: #{(($size / $columns) * 100)+"%"};
  }
}



////////// Phone //////////

@media (max-width: $grid-tablet-breakpoint - 1) {
  .grid {
    padding: $grid-phone-margin - ($grid-phone-gutter / 2);
  }

  .cell {
    margin: $grid-phone-gutter / 2;
    @include partial-size($grid-cell-default-columns, $grid-phone-columns,
        $grid-phone-gutter);
  }

  .cell--hide-phone {
    display: none !important;
  }

  // Define order override classes.
  @for $i from 1 through $grid-max-columns {
    .cell--order-#{$i}-phone {
      order: $i;
    }
  }

  // Define partial sizes for columnNumber < totalColumns.
  @for $i from 1 through ($grid-phone-columns - 1) {
    .cell--#{$i}-col,
    .cell--#{$i}-col-phone {
      @include partial-size($i, $grid-phone-columns, $grid-phone-gutter);
    }
  }

  // Define 100% for everything else.
  @for $i from $grid-phone-columns through $grid-desktop-columns {
    .cell--#{$i}-col,
    .cell--#{$i}-col-phone {
      @include full-size($grid-phone-gutter);
    }
  }

  // Define valid phone offsets.
  @for $i from 1 through ($grid-phone-columns - 1) {
    .cell--#{$i}-offset,
    .cell--#{$i}-offset-phone {
      @include offset-size($i, $grid-phone-columns, $grid-phone-gutter);
    }
  }
}


////////// Tablet //////////

@media (min-width: $grid-tablet-breakpoint) and (max-width: $grid-desktop-breakpoint - 1) {
  .grid {
    padding: $grid-tablet-margin - ($grid-tablet-gutter / 2);
  }

  .cell {
    margin: $grid-tablet-gutter / 2;
    @include partial-size($grid-cell-default-columns, $grid-tablet-columns,
        $grid-tablet-gutter);
  }

  .cell--hide-tablet {
    display: none !important;
  }

  // Define order override classes.
  @for $i from 1 through $grid-max-columns {
    .cell--order-#{$i}-tablet.cell--order-#{$i}-tablet {
      order: $i;
    }
  }

  // Define partial sizes for columnNumber < totalColumns.
  @for $i from 1 through ($grid-tablet-columns - 1) {
    .cell--#{$i}-col,
    .cell--#{$i}-col-tablet.cell--#{$i}-col-tablet {
      @include partial-size($i, $grid-tablet-columns, $grid-tablet-gutter);
    }
  }

  // Define 100% for everything else.
  @for $i from $grid-tablet-columns through $grid-desktop-columns {
    .cell--#{$i}-col,
    .cell--#{$i}-col-tablet.cell--#{$i}-col-tablet {
      @include full-size($grid-tablet-gutter);
    }
  }

  // Define valid tablet offsets.
  @for $i from 1 through ($grid-tablet-columns - 1) {
    .cell--#{$i}-offset,
    .cell--#{$i}-offset-tablet.cell--#{$i}-offset-tablet {
      @include offset-size($i, $grid-tablet-columns, $grid-tablet-gutter);
    }
  }
}
